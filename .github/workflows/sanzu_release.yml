name: sanzu release

on:
  push:
    tags:
      - "sanzu-v*"

env:
  GITHUB_REF: "${{ github.ref }}"

jobs:

  docker-alpine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: build
        run: cargo clean && cd build && make alpine

      - name: Upload resulting 'alpine bins'
        uses: actions/upload-artifact@v3
        with:
          name: sanzu-alpine
          path: ./target/release/*

  docker-debian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: build
        run: cargo clean && cd build && make debian

      - name: Upload resulting 'debian pkg'
        uses: actions/upload-artifact@v3
        with:
          name: sanzu-debian
          path: ./target/debian/*

  docker-alma8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: build
        run: cargo clean && cd build && make almalinux8

      - name: Upload resulting 'alma8 pkg'
        uses: actions/upload-artifact@v3
        with:
          name: sanzu-alma8
          path: ./target/generate-rpm/*

  docker-alma9:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: build
        run: cargo clean && cd build && make almalinux9

      - name: Upload resulting 'alma9 pkg'
        uses: actions/upload-artifact@v3
        with:
          name: sanzu-alma9
          path: ./target/generate-rpm/*

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: dl full ffmpeg binaries
      run: |
        curl -L  -o ffmpeg.zip https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n4.4-latest-win64-gpl-shared-4.4.zip

    - name: dl full ffmpeg binaries
      run: |
        unzip -qq ffmpeg.zip -d ffmpeg

    - name: cp files
      run: |
         cp ffmpeg\ffmpeg-n4.4-latest-win64-gpl-shared-4.4\bin\* .

    - name: install cargo wix
      run: |
        cargo install --git https://github.com/volks73/cargo-wix --tag 0.3.4 cargo-wix

    - name: prepare vcpkg
      run: |
        vcpkg integrate install

    - name: install ffmpeg
      run: |
        vcpkg install ffmpeg[gpl,x264]:x64-windows

    - name: install protoc
      uses: arduino/setup-protoc@v1

    - name: Build
      env:
        RUSTFLAGS: -D warnings
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --verbose -p sanzu --no-default-features

    - name: run cargo wix
      run: |
         cargo wix --nocapture --package=sanzu

    - name: Upload resulting 'sanzu_client.exe'
      uses: actions/upload-artifact@v1
      with:
        name: sanzu_client.exe
        path: ./target/release/sanzu_client.exe

    - name: Upload resulting 'sanzu_server.exe'
      uses: actions/upload-artifact@v1
      with:
        name: sanzu_server.exe
        path: ./target/release/sanzu_server.exe

    - name: Upload resulting sanzu msi
      uses: actions/upload-artifact@v3
      with:
        name: sanzu_msi
        path: ./target/wix/*.msi

  release:
    # From https://github.com/cloudflare/wrangler/blob/master/.github/workflows/release.yml
    name: GitHub Release
    needs: [docker-alpine, docker-alma8, docker-alma9]
    runs-on: ubuntu-latest
    steps:
      - name: Query version number
        id: get_version
        shell: bash
        run: |
          echo "using version tag ${GITHUB_REF:17}"
          echo ::set-output name=version::"${GITHUB_REF:17}"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: ./CHANGELOG.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: sanzu-${{ steps.get_version.outputs.VERSION }}
          release_name: sanzu-${{ steps.get_version.outputs.VERSION }}
          draft: true

      - name: Download Alpine artifact
        uses: actions/download-artifact@v1
        with:
          name: sanzu-alpine

      - name: Download Debian artifact
        uses: actions/download-artifact@v1
        with:
          name: sanzu-debian

      - name: Download Alma8 artifact
        uses: actions/download-artifact@v1
        with:
          name: sanzu-alma8

      - name: Download Alma9 artifact
        uses: actions/download-artifact@v1
        with:
          name: sanzu-alma9

      - name: lsdir
        shell: bash
        run: |
          find .

      - name: compression_alpine
        shell: bash
        run: |
          zip -r sanzu-alpine.zip sanzu-alpine

      - name: compression_debian
        shell: bash
        run: |
          zip -r sanzu-debian.zip sanzu-debian

      - name: compression_alma8
        shell: bash
        run: |
          zip -r sanzu-alma8.zip sanzu-alma8

      - name: compression_alma9
        shell: bash
        run: |
          zip -r sanzu-alma9.zip sanzu-alma9

      - name: Release Alpine artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanzu-alpine.zip
          asset_content_type: application/octet-stream
          asset_name: sanzu-alpine-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release Debian artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanzu-debian.zip
          asset_content_type: application/octet-stream
          asset_name: sanzu-debian-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release Alma8 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanzu-alma8.zip
          asset_content_type: application/octet-stream
          asset_name: sanzu-alma8-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Release Alma9 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanzu-alma9.zip
          asset_content_type: application/octet-stream
          asset_name: sanzu-alma9-${{ steps.get_version.outputs.VERSION }}.zip
